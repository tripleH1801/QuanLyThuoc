/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ClassGetImg;
import controller.NhanVienRightClickPopUp;
import dao.DAO_DiaChi;
import dao.DAO_NhanVien;
import entity.DiaChi;
import entity.NhanVien;

import java.awt.Color;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HoangPC
 */
public class QuanLyNhanVienPanel extends javax.swing.JPanel implements ActionListener {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@SuppressWarnings("unused")
	private gui_Chinh gui;
	private NhanVienRightClickPopUp popUp;
	private List<NhanVien> listNV;
	private DAO_NhanVien daoNV;
	private DefaultTableModel md;
	@SuppressWarnings("rawtypes")
	private JComboBox jcbTimTrangThai;
	private Vector<String> vecTinhTP;
	private Vector<String> vecQuanHuyen;
	private Vector<String> vecPhuongXa;
	private DAO_DiaChi daoDiaChi;
	private PopupMenu po;
	private String fileIn;

	/**
	 * Creates new form pnKhachHang
	 */

	public QuanLyNhanVienPanel() {

		fileIn = "";
		vecTinhTP = new Vector<String>();
		vecQuanHuyen = new Vector<String>();
		vecPhuongXa = new Vector<String>();
		daoDiaChi = new DAO_DiaChi();
		listNV = new ArrayList<NhanVien>();
		daoNV = new DAO_NhanVien();

		initComponents();
		docDataVaoTable();
		loadTinh();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		pnHeader = new javax.swing.JPanel();
		lblHeader = new javax.swing.JLabel();
		pnBody = new javax.swing.JPanel();
		pnMenu = new javax.swing.JPanel();
		jPanel8 = new javax.swing.JPanel();
		btnXoaTrang = new javax.swing.JButton();
		btnSua = new javax.swing.JButton();
		btnThoiViec = new javax.swing.JButton();
		btnThem = new javax.swing.JButton();
		jPanel6 = new javax.swing.JPanel();
		btnTim = new javax.swing.JButton();
		txtTim = new javax.swing.JTextField();
		lblTimSDT = new javax.swing.JLabel();
		jcbTimTrangThai = new javax.swing.JComboBox<>();
		jcbTimGioiTinh = new javax.swing.JComboBox<>();
		jSeparator1 = new javax.swing.JSeparator();
		jLabel2 = new javax.swing.JLabel();
		txtTimTen = new javax.swing.JTextField();
		lblTimSDT1 = new javax.swing.JLabel();
		pnSua = new javax.swing.JPanel();
		jPanel1 = new javax.swing.JPanel();
		txtTen = new javax.swing.JTextField();
		lblTenKH = new javax.swing.JLabel();
		jcbGioiTinh = new javax.swing.JComboBox<>();
		lblSDT1 = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		lblHinh = new javax.swing.JLabel();
		jPanel4 = new javax.swing.JPanel();
		lblDC = new javax.swing.JLabel();
		lblMa1 = new javax.swing.JLabel();
		txtMa = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		jcbTinh = new javax.swing.JComboBox<>();
		jcbHuyen = new javax.swing.JComboBox<>();
		jcbXa = new javax.swing.JComboBox<>();
		txtCmnd = new javax.swing.JTextField();
		lblMa2 = new javax.swing.JLabel();
		btnDong = new javax.swing.JButton();
		btnXacNhan = new javax.swing.JButton();
		txtSDT = new javax.swing.JTextField();
		lblSDT = new javax.swing.JLabel();
		jSeparator2 = new javax.swing.JSeparator();
		pnTable = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tblNV = new javax.swing.JTable();
		btnSkipPrevius = new javax.swing.JButton();
		btnNextPrevius = new javax.swing.JButton();
		txtSoTrang = new javax.swing.JLabel();
		btnNextForward = new javax.swing.JButton();
		btnSkipForward = new javax.swing.JButton();
		jSeparator3 = new javax.swing.JSeparator();
		jLabel3 = new javax.swing.JLabel();

		setPreferredSize(new java.awt.Dimension(980, 725));

		pnHeader.setBackground(new java.awt.Color(1, 128, 145));
		pnHeader.setPreferredSize(new java.awt.Dimension(980, 108));

		lblHeader.setBackground(new java.awt.Color(255, 255, 255));
		lblHeader.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
		lblHeader.setForeground(new java.awt.Color(255, 255, 255));
		lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		lblHeader.setText("Quản lý nhân viên");

		javax.swing.GroupLayout pnHeaderLayout = new javax.swing.GroupLayout(pnHeader);
		pnHeader.setLayout(pnHeaderLayout);
		pnHeaderLayout.setHorizontalGroup(
				pnHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblHeader,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		pnHeaderLayout.setVerticalGroup(
				pnHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblHeader,
						javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE));

		pnBody.setBackground(new java.awt.Color(102, 102, 255));

		pnMenu.setBackground(new java.awt.Color(255, 255, 255));

		jPanel8.setBackground(new java.awt.Color(255, 255, 255));

		btnXoaTrang.setBackground(new java.awt.Color(204, 204, 204));
		btnXoaTrang.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
		btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh (1).png"))); // NOI18N
		btnXoaTrang.setText("Làm mới");
		btnXoaTrang.setToolTipText("Làm mới mục");
		btnXoaTrang.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

		btnSua.setBackground(new java.awt.Color(204, 204, 204));
		btnSua.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
		btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh.png"))); // NOI18N
		btnSua.setText("Sửa");
		btnSua.setToolTipText("Sửa thông tin nhân viên");
		btnSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		btnSua.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSuaActionPerformed(evt);
			}
		});

		btnThoiViec.setBackground(new java.awt.Color(204, 204, 204));
		btnThoiViec.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
		btnThoiViec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fired.png"))); // NOI18N
		btnThoiViec.setText("Thôi việc");
		btnThoiViec.setToolTipText("Thôi việc nhân viên");
		btnThoiViec.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

		btnThem.setBackground(new java.awt.Color(204, 204, 204));
		btnThem.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
		btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sign-up.png"))); // NOI18N
		btnThem.setText("Thêm");
		btnThem.setToolTipText("Thêm  nhân viên mới");
		btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		btnThem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThemActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
		jPanel8.setLayout(jPanel8Layout);
		jPanel8Layout.setHorizontalGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel8Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 110,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnThoiViec)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 110,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(btnXoaTrang)));
		jPanel8Layout.setVerticalGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(btnThoiViec, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addComponent(btnXoaTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
						javax.swing.GroupLayout.PREFERRED_SIZE));

		btnSua.setEnabled(false);

		jPanel6.setBackground(new java.awt.Color(255, 255, 255));

		btnTim.setBackground(new java.awt.Color(204, 204, 204));
		btnTim.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
		btnTim.setForeground(new java.awt.Color(255, 255, 255));
		btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/find.png"))); // NOI18N
		btnTim.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		btnTim.setPreferredSize(new java.awt.Dimension(71, 34));

		txtTim.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
		txtTim.setPreferredSize(new java.awt.Dimension(7, 30));

		lblTimSDT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		lblTimSDT.setForeground(new java.awt.Color(29, 53, 87));
		lblTimSDT.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		lblTimSDT.setText("Tìm SĐT:");
		lblTimSDT.setMaximumSize(new java.awt.Dimension(67, 17));
		lblTimSDT.setMinimumSize(new java.awt.Dimension(67, 17));
		lblTimSDT.setPreferredSize(new java.awt.Dimension(67, 17));

		jcbTimTrangThai.setBackground(new java.awt.Color(153, 153, 153));
		jcbTimTrangThai.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		jcbTimTrangThai.setModel(
				new javax.swing.DefaultComboBoxModel<>(new String[] { "Trạng thái", "Đang làm", "Đã nghỉ" }));

		jcbTimGioiTinh.setBackground(new java.awt.Color(153, 153, 153));
		jcbTimGioiTinh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		jcbTimGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Giới tính", "Nam", "Nữ" }));

		jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		jLabel2.setForeground(new java.awt.Color(29, 53, 87));
		jLabel2.setText("Tìmkiếm");

		txtTimTen.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
		txtTimTen.setPreferredSize(new java.awt.Dimension(7, 30));

		lblTimSDT1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		lblTimSDT1.setForeground(new java.awt.Color(29, 53, 87));
		lblTimSDT1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		lblTimSDT1.setText("Tìm tên:");
		lblTimSDT1.setMaximumSize(new java.awt.Dimension(67, 17));
		lblTimSDT1.setMinimumSize(new java.awt.Dimension(67, 17));
		lblTimSDT1.setPreferredSize(new java.awt.Dimension(67, 17));

		javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
		jPanel6.setLayout(jPanel6Layout);
		jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel6Layout.createSequentialGroup()
						.addComponent(lblTimSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 67,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(txtTim, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addComponent(jSeparator1)
				.addGroup(jPanel6Layout.createSequentialGroup().addContainerGap()
						.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addGroup(jPanel6Layout.createSequentialGroup()
						.addComponent(lblTimSDT1, javax.swing.GroupLayout.PREFERRED_SIZE, 67,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(txtTimTen, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(jcbTimGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 140,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jcbTimTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 130,
								javax.swing.GroupLayout.PREFERRED_SIZE)));
		jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel6Layout.createSequentialGroup().addComponent(jLabel2)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel6Layout.createSequentialGroup().addGap(1, 1, 1)
										.addGroup(jPanel6Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(lblTimSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(jPanel6Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(txtTimTen, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(lblTimSDT1, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(0, 10, Short.MAX_VALUE))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout
										.createSequentialGroup()
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addGroup(jPanel6Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jcbTimTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE,
														33, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jcbTimGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE,
														33, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap()))));

		pnSua.setBackground(new java.awt.Color(255, 255, 255));
		pnSua.setLayout(new java.awt.GridLayout(1, 0));

		jPanel1.setBackground(new java.awt.Color(255, 255, 255));

		txtTen.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
		txtTen.setPreferredSize(new java.awt.Dimension(7, 30));

		lblTenKH.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		lblTenKH.setForeground(new java.awt.Color(29, 53, 87));
		lblTenKH.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		lblTenKH.setText("Tên :");
		lblTenKH.setMaximumSize(new java.awt.Dimension(67, 17));
		lblTenKH.setMinimumSize(new java.awt.Dimension(67, 17));
		lblTenKH.setPreferredSize(new java.awt.Dimension(67, 22));

		jcbGioiTinh.setBackground(new java.awt.Color(153, 153, 153));
		jcbGioiTinh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		jcbGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

		lblSDT1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		lblSDT1.setForeground(new java.awt.Color(29, 53, 87));
		lblSDT1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		lblSDT1.setText("Giới tính:");
		lblSDT1.setPreferredSize(new java.awt.Dimension(53, 22));

		lblHinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add-image.png"))); // NOI18N

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(lblHinh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
						129, Short.MAX_VALUE));
		jPanel2Layout.setVerticalGroup(
				jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblHinh,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(lblSDT1, javax.swing.GroupLayout.PREFERRED_SIZE, 66,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblTenKH, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(txtTen, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jcbGioiTinh, 0, 233, Short.MAX_VALUE))
						.addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblTenKH, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(10, 10, 10)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jcbGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblSDT1, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addGap(59, 59, 59))
				.addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE));

		pnSua.add(jPanel1);

		jPanel4.setBackground(new java.awt.Color(255, 255, 255));

		lblDC.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		lblDC.setForeground(new java.awt.Color(29, 53, 87));
		lblDC.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		lblDC.setText("Địa chỉ:");
		lblDC.setPreferredSize(new java.awt.Dimension(50, 22));

		lblMa1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		lblMa1.setForeground(new java.awt.Color(29, 53, 87));
		lblMa1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		lblMa1.setText("Mã:");
		lblMa1.setPreferredSize(new java.awt.Dimension(50, 22));

		txtMa.setEditable(false);
		txtMa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
		txtMa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		txtMa.setBorder(null);
		txtMa.setFocusable(false);
		txtMa.setPreferredSize(new java.awt.Dimension(7, 30));

		jcbTinh.setBackground(new java.awt.Color(153, 153, 153));
		jcbTinh.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
		jcbTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tỉnh/Thành phố" }));

		jcbHuyen.setBackground(new java.awt.Color(153, 153, 153));
		jcbHuyen.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
		jcbHuyen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quận/huyện" }));

		jcbXa.setBackground(new java.awt.Color(153, 153, 153));
		jcbXa.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
		jcbXa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phường/Xã" }));

		txtCmnd.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
		txtCmnd.setPreferredSize(new java.awt.Dimension(7, 30));

		lblMa2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		lblMa2.setForeground(new java.awt.Color(29, 53, 87));
		lblMa2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		lblMa2.setText("CMND:");
		lblMa2.setPreferredSize(new java.awt.Dimension(50, 22));

		btnDong.setBackground(new java.awt.Color(204, 204, 204));
		btnDong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		btnDong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/denied.png"))); // NOI18N
		btnDong.setText("Đóng");
		btnDong.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDongActionPerformed(evt);
			}
		});

		btnXacNhan.setBackground(new java.awt.Color(204, 204, 204));
		btnXacNhan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		btnXacNhan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/management.png"))); // NOI18N
		btnXacNhan.setText("Xác nhận");
		btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnXacNhanActionPerformed(evt);
			}
		});

		txtSDT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
		txtSDT.setMinimumSize(new java.awt.Dimension(7, 30));
		txtSDT.setPreferredSize(new java.awt.Dimension(7, 30));

		lblSDT.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		lblSDT.setForeground(new java.awt.Color(29, 53, 87));
		lblSDT.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		lblSDT.setText("SĐT:");
		lblSDT.setPreferredSize(new java.awt.Dimension(53, 22));

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup()
						.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 471,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addGroup(jPanel4Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
						.addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(btnDong,
								javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGroup(jPanel4Layout.createSequentialGroup()
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
								.addComponent(lblDC, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel4Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										jPanel4Layout.createSequentialGroup()
												.addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(lblMa2, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(jcbTinh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel4Layout.createSequentialGroup()
										.addComponent(jcbHuyen, 0, javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(jcbXa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addGroup(jPanel4Layout.createSequentialGroup()
										.addComponent(txtCmnd, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addGap(18, 18, 18)
										.addComponent(lblMa1, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 179,
												javax.swing.GroupLayout.PREFERRED_SIZE)))));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup().addGroup(jPanel4Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(lblSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lblMa1, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblMa2, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtCmnd, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(lblDC, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jcbTinh).addComponent(jcbHuyen).addComponent(jcbXa))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(btnXacNhan, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
								.addComponent(btnDong, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel1)));

		pnSua.add(jPanel4);

		javax.swing.GroupLayout pnMenuLayout = new javax.swing.GroupLayout(pnMenu);
		pnMenu.setLayout(pnMenuLayout);
		pnMenuLayout.setHorizontalGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						pnMenuLayout.createSequentialGroup().addContainerGap()
								.addGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(jSeparator2)
										.addComponent(pnSua, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)
										.addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addContainerGap()));
		pnMenuLayout.setVerticalGroup(pnMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnMenuLayout.createSequentialGroup().addContainerGap()
						.addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, 0)
						.addComponent(pnSua, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, 0).addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));

		pnSua.setVisible(false);

		pnTable.setBackground(new java.awt.Color(255, 255, 255));

		tblNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
		tblNV.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null, null, null, null, null } }, new String[] { "Tên nhân viên",
						"Giới tính", "SĐT", "CMND", "Tỉnh/TP", "Quận/Huyện", "Phường/Xã", "Trạng Thái" }) {
			Class[] types = new Class[] { java.lang.String.class, java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class,
					java.lang.String.class };
			boolean[] canEdit = new boolean[] { false, false, false, false, false, false, false, false };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		tblNV.setRowHeight(34);
		tblNV.setSelectionBackground(new java.awt.Color(1, 128, 145));
		tblNV.getTableHeader().setReorderingAllowed(false);
		tblNV.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				tblNVMouseReleased(evt);
			}
		});
		jScrollPane1.setViewportView(tblNV);
		if (tblNV.getColumnModel().getColumnCount() > 0) {
			tblNV.getColumnModel().getColumn(0).setResizable(false);
			tblNV.getColumnModel().getColumn(0).setPreferredWidth(130);
			tblNV.getColumnModel().getColumn(1).setResizable(false);
			tblNV.getColumnModel().getColumn(1).setPreferredWidth(5);
			tblNV.getColumnModel().getColumn(2).setResizable(false);
			tblNV.getColumnModel().getColumn(2).setPreferredWidth(30);
			tblNV.getColumnModel().getColumn(3).setResizable(false);
			tblNV.getColumnModel().getColumn(3).setPreferredWidth(30);
			tblNV.getColumnModel().getColumn(4).setResizable(false);
			tblNV.getColumnModel().getColumn(4).setPreferredWidth(80);
			tblNV.getColumnModel().getColumn(5).setResizable(false);
			tblNV.getColumnModel().getColumn(5).setPreferredWidth(80);
			tblNV.getColumnModel().getColumn(6).setResizable(false);
			tblNV.getColumnModel().getColumn(6).setPreferredWidth(80);
			tblNV.getColumnModel().getColumn(7).setResizable(false);
			tblNV.getColumnModel().getColumn(7).setPreferredWidth(40);
		}
		tblNV.getTableHeader().setFont(new java.awt.Font("Arial", 0, 14));

		btnSkipPrevius.setBackground(new java.awt.Color(204, 204, 204));
		btnSkipPrevius.setIcon(
				new javax.swing.ImageIcon(getClass().getResource("/img/baseline_skip_previous_white_24dp.png"))); // NOI18N
		btnSkipPrevius.setToolTipText("Trang đầu");
		btnSkipPrevius.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		btnSkipPrevius.setPreferredSize(new java.awt.Dimension(40, 30));

		btnNextPrevius.setBackground(new java.awt.Color(204, 204, 204));
		btnNextPrevius
				.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/baseline_fast_rewind_white_24dp.png"))); // NOI18N
		btnNextPrevius.setToolTipText("Trang trước");
		btnNextPrevius.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		btnNextPrevius.setPreferredSize(new java.awt.Dimension(40, 30));

		txtSoTrang.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
		txtSoTrang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		txtSoTrang.setText("0");

		btnNextForward.setBackground(new java.awt.Color(204, 204, 204));
		btnNextForward.setIcon(
				new javax.swing.ImageIcon(getClass().getResource("/img/baseline_fast_forward_white_24dp.png"))); // NOI18N
		btnNextForward.setToolTipText("Trang sau");
		btnNextForward.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		btnNextForward.setPreferredSize(new java.awt.Dimension(40, 30));

		btnSkipForward.setBackground(new java.awt.Color(204, 204, 204));
		btnSkipForward
				.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/baseline_skip_next_white_24dp.png"))); // NOI18N
		btnSkipForward.setToolTipText("Trang cuối");
		btnSkipForward.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		btnSkipForward.setPreferredSize(new java.awt.Dimension(40, 30));

		jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
		jLabel3.setForeground(new java.awt.Color(29, 53, 87));
		jLabel3.setText("Danh sách nhân viên");

		javax.swing.GroupLayout pnTableLayout = new javax.swing.GroupLayout(pnTable);
		pnTable.setLayout(pnTableLayout);
		pnTableLayout.setHorizontalGroup(pnTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTableLayout.createSequentialGroup()
						.addContainerGap()
						.addGroup(pnTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(jScrollPane1)
								.addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(javax.swing.GroupLayout.Alignment.LEADING,
										pnTableLayout.createSequentialGroup().addGroup(pnTableLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(pnTableLayout.createSequentialGroup()
														.addComponent(btnSkipPrevius,
																javax.swing.GroupLayout.PREFERRED_SIZE, 50,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(btnNextPrevius,
																javax.swing.GroupLayout.PREFERRED_SIZE, 50,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addComponent(txtSoTrang,
																javax.swing.GroupLayout.PREFERRED_SIZE, 52,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addComponent(btnNextForward,
																javax.swing.GroupLayout.PREFERRED_SIZE, 50,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(btnSkipForward,
																javax.swing.GroupLayout.PREFERRED_SIZE, 50,
																javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(pnTableLayout.createSequentialGroup().addGap(16, 16, 16)
														.addComponent(jLabel3)))
												.addGap(0, 0, Short.MAX_VALUE)))
						.addContainerGap()));
		pnTableLayout.setVerticalGroup(pnTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnTableLayout.createSequentialGroup().addContainerGap().addComponent(jLabel3)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(pnTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(btnNextForward, javax.swing.GroupLayout.Alignment.TRAILING,
										javax.swing.GroupLayout.PREFERRED_SIZE, 33,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtSoTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 33,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnNextPrevius, javax.swing.GroupLayout.PREFERRED_SIZE, 33,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnSkipPrevius, javax.swing.GroupLayout.PREFERRED_SIZE, 33,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnSkipForward, javax.swing.GroupLayout.PREFERRED_SIZE, 33,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap()));

		javax.swing.GroupLayout pnBodyLayout = new javax.swing.GroupLayout(pnBody);
		pnBody.setLayout(pnBodyLayout);
		pnBodyLayout.setHorizontalGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnBodyLayout.createSequentialGroup()
						.addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(pnTable, javax.swing.GroupLayout.Alignment.LEADING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(pnMenu, javax.swing.GroupLayout.Alignment.LEADING,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE))
						.addGap(0, 0, 0)));
		pnBodyLayout.setVerticalGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnBodyLayout.createSequentialGroup()
						.addComponent(pnMenu, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, 0).addComponent(pnTable, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addComponent(pnHeader, javax.swing.GroupLayout.Alignment.LEADING,
								javax.swing.GroupLayout.DEFAULT_SIZE, 982, Short.MAX_VALUE)
						.addComponent(pnBody, javax.swing.GroupLayout.Alignment.LEADING,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE))
				.addGap(0, 0, 0)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(pnHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 44,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, 0).addComponent(pnBody, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		// -------------code-------------------
		listNV = daoNV.getAllNV();
		countDS = listNV.size();
		md = (DefaultTableModel) tblNV.getModel();

		btnNextForward.addActionListener(this);
		btnSkipForward.addActionListener(this);
		btnNextPrevius.addActionListener(this);
		btnSkipPrevius.addActionListener(this);

		btnTim.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				String sdt = txtTim.getText();
				if (sdt.equalsIgnoreCase("")) {
					JOptionPane.showMessageDialog(null, "Mời nhập số điện thoại nhân viên cần tìm");
					return;
				}
				if (!sdt.matches(
						"(^(03)[2-9]\\d{7})|(^(07)[06-9]\\d{7})|(^(08)[1-5]\\d{7})|(^(056)\\d{7})|(^(058)\\d{7})|(^(059)\\d{7})|(^(09)[0-46-9]\\d{7})")) {
					JOptionPane.showMessageDialog(null,
							"<html><b>Số điện thoại</b> không có thực!<br>Vui lòng kiểm tra lại</html>");
					txtSDT.selectAll();
					txtSDT.requestFocus();
					return;
				}
				NhanVien nv = daoNV.getNhanVienBySdt(sdt);
				if (nv.getSdt() == null) {
					JOptionPane.showMessageDialog(null, "Không tìm thấy nhân viên");
					md.getDataVector().removeAllElements();
					md.fireTableDataChanged();
					md.addRow(new Object[] { "--------------------------------------",
							"--------------------------------------", "--------------------------------------",
							"--------------------------------------", "--------------------------------------",
							"--------------------------------------", "--------------------------------------",
							"--------------------------------------" });
				} else {
					md.getDataVector().removeAllElements();
					md.fireTableDataChanged();
					md.addRow(new Object[] { nv.getTenNV(), nv.isGioiTinh() == true ? "Nam" : "Nữ", nv.getSdt(),
							nv.getCmnd(), nv.getDiaChi().getTinhTP(), nv.getDiaChi().getQuanHuyen(),
							nv.getDiaChi().getPhuongXa(), nv.isTrangThaiLam() == true ? "Đang làm" : "Đã nghỉ" });
				}
			}
		});
		btnThoiViec.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				doiTrangThaiNhanVien();
			}
		});

		jcbTimGioiTinh.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				timKiemNV();
			}
		});
		jcbTimTrangThai.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				timKiemNV();
			}
		});

		btnXoaTrang.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				int c = JOptionPane.showConfirmDialog(null, "Bạn có muốn làm mới lại trang này?", "Thông báo",
						JOptionPane.YES_NO_OPTION);
				if (c == JOptionPane.YES_OPTION)
					xoaTrang();
			}
		});

		jcbTinh.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if (jcbTinh.getSelectedItem().toString().equalsIgnoreCase("Tỉnh/Thành phố")) {
					vecQuanHuyen = new Vector<String>();
					vecQuanHuyen.add("Quận/Huyện");
					DefaultComboBoxModel<String> mdQuan = new DefaultComboBoxModel<>(vecQuanHuyen);
					jcbHuyen.setModel(mdQuan);
					vecPhuongXa = new Vector<String>();
					vecPhuongXa.add("Phường/Xã");
					DefaultComboBoxModel<String> mdPhuong = new DefaultComboBoxModel<>(vecPhuongXa);
					jcbXa.setModel(mdPhuong);
					return;
				}
				vecQuanHuyen = daoDiaChi.getAllHuyenTheoTinh(jcbTinh.getSelectedItem().toString());
				DefaultComboBoxModel<String> mdQuanHuyen = new DefaultComboBoxModel<>(vecQuanHuyen);
				jcbHuyen.setModel(mdQuanHuyen);
			}
		});
		jcbHuyen.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				if (jcbHuyen.getSelectedItem().toString().equalsIgnoreCase("Quận/Huyện")) {
					vecPhuongXa = new Vector<String>();
					vecPhuongXa.add("Phường/Xã");
					DefaultComboBoxModel<String> mdPhuong = new DefaultComboBoxModel<>(vecPhuongXa);
					jcbXa.setModel(mdPhuong);
					return;
				}
				vecPhuongXa = daoDiaChi.getAllPhuongXaTheoTinhVaHuyen(jcbTinh.getSelectedItem().toString(),
						jcbHuyen.getSelectedItem().toString());
				DefaultComboBoxModel<String> mdPhuong = new DefaultComboBoxModel<>(vecPhuongXa);
				jcbXa.setModel(mdPhuong);
			}
		});
		lblHinh.addMouseListener(new MouseListener() {

			@Override
			public void mouseReleased(MouseEvent e) {
				if (e.getSource().equals(lblHinh)) {
					ClassGetImg imgc = new ClassGetImg();
					try {
						fileIn = imgc.setImg("/nvImg/", lblHinh);
					} catch (IOException e1) {
						e1.printStackTrace();
					}
				}
			}

			@Override
			public void mousePressed(MouseEvent e) {
			}

			@Override
			public void mouseExited(MouseEvent e) {

			}

			@Override
			public void mouseEntered(MouseEvent e) {

			}

			@Override
			public void mouseClicked(MouseEvent e) {

			}
		});
//		po = new PopupMenu();
//		po.add(new MenuItem("Test"));
//		this.add(po);
		txtTimTen.addKeyListener(new KeyListener() {

			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void keyReleased(KeyEvent e) {
				timKiemNV();
			}

			@Override
			public void keyPressed(KeyEvent e) {
				// TODO Auto-generated method stub

			}
		});
	}

	private void loadToPnSua(int row) {
		txtTen.setText(tblNV.getValueAt(row, 0).toString());
		txtSDT.setText(tblNV.getValueAt(row, 2).toString());
		String maNV = daoNV.getMaNVTheoSDT(txtSDT.getText());
		txtMa.setText(maNV);
		txtCmnd.setText(tblNV.getValueAt(row, 3).toString());
		jcbGioiTinh.setSelectedIndex(tblNV.getValueAt(row, 1).toString().equalsIgnoreCase("Nam") ? 0 : 1);
		jcbTinh.setSelectedItem(tblNV.getValueAt(row, 4).toString());
		jcbHuyen.setSelectedItem(tblNV.getValueAt(row, 5).toString());
		jcbXa.setSelectedItem(tblNV.getValueAt(row, 6).toString());
		lblHinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add-image.png")));
		ClassGetImg imgClass = new ClassGetImg();
		imgClass.setImgChiTiet(lblHinh, "/nvImg/" + maNV);
	}

	private void timKiemNV() {
		String ten = txtTimTen.getText();
		int trangThai = jcbTimTrangThai.getSelectedIndex();
		int gioiTinh = jcbTimGioiTinh.getSelectedIndex();
		
		listNV = daoNV.getNhanVienByAll(ten, trangThai, gioiTinh);
		countDS = listNV.size();
		md.getDataVector().removeAllElements();
		if (listNV.size() == 0) {
			md.fireTableDataChanged();
			return;
		} else {
			listNV.forEach(t -> {
				md.addRow(new Object[] { t.getTenNV(), t.isGioiTinh() == true ? "Nam" : "Nữ", t.getSdt(), t.getCmnd(),
						t.getDiaChi().getTinhTP(), t.getDiaChi().getQuanHuyen(), t.getDiaChi().getPhuongXa(),
						t.isTrangThaiLam() == true ? "Đang làm" : "Đã nghỉ" });
			});
		}
	}

	private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {

		new ThemNhanVienJframe().setVisible(true);
	}

	private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {
		updateNV();
		int c = JOptionPane.showConfirmDialog(null, "Bạn có muốn tiếp tục sửa thông tin ?", "",
				JOptionPane.YES_NO_OPTION);
		if (c == JOptionPane.NO_OPTION) {
			pnSua.setVisible(false);
			btnSua.setEnabled(true);
			xoaFormSua();
		}
	}

	private void xoaFormSua() {
		txtCmnd.setText("");
		txtSDT.setText("");
		txtTen.setText("");
		txtMa.setText("");
		jcbGioiTinh.setSelectedIndex(0);
		jcbTinh.setSelectedIndex(0);
		jcbHuyen.setSelectedIndex(0);
		jcbXa.setSelectedIndex(0);
	}

	private void tblNVMouseReleased(java.awt.event.MouseEvent evt) {

		int row = tblNV.getSelectedRow();
		if (row == -1) {
			tblNV.clearSelection();
			btnSua.setEnabled(false);
		} else {
			if (!pnSua.isVisible())
				btnSua.setEnabled(true);
			else {
				loadToPnSua(row);
			}
			if (!tblNV.getValueAt(row, 7).toString().equalsIgnoreCase("Đang làm")) {
				btnThoiViec.setText("Làm lại");
				btnThoiViec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/business-man.png")));
			} else if (!btnThoiViec.getText().equalsIgnoreCase("Thôi việc")) {
				btnThoiViec.setText("Thôi việc");
				btnThoiViec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fired.png")));
			}
		}
		if (SwingUtilities.isRightMouseButton(evt)) {
			int r = tblNV.rowAtPoint(evt.getPoint());
			if (r >= 0 && r < tblNV.getRowCount()) {
				if (!tblNV.getValueAt(r, 7).toString().equalsIgnoreCase("Đang làm")) {
					btnThoiViec.setText("Làm lại");
					btnThoiViec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/business-man.png")));
				} else if (!btnThoiViec.getText().equalsIgnoreCase("Thôi việc")) {
					btnThoiViec.setText("Thôi việc");
					btnThoiViec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fired.png")));
				}
				tblNV.setRowSelectionInterval(r, r);
				btnSua.setEnabled(true);
				loadToPnSua(r);
				popUp = new NhanVienRightClickPopUp(btnThoiViec.getText(), this);
			} else {
				tblNV.clearSelection();
			}
			row = tblNV.getSelectedRow();
			if (row < 0)
				return;
			else {
				popUp.show(evt.getComponent(), evt.getX(), evt.getY());
			}

		}
	}

	public void doiTrangThaiNhanVien() {
		int row = tblNV.getSelectedRow();
		if (row == -1) {
			JOptionPane.showMessageDialog(null, "Mời chọn nhân viên cần cho thôi việc!");
			return;
		}
		String ten = tblNV.getValueAt(row, 0).toString();
		int c = 0;
//		int loaiDoiTrangThai = 0;
		if (btnThoiViec.getText().equalsIgnoreCase("Thôi việc"))
			c = JOptionPane.showConfirmDialog(null, "Thôi việc nhân viên '" + ten + "' ?", "Thông báo",
					JOptionPane.YES_NO_OPTION);
		else
			c = JOptionPane.showConfirmDialog(null, "Xác nhận cho nhân viên '" + ten + "' làm lại?", "Thông báo",
					JOptionPane.YES_NO_OPTION);
		if (c == JOptionPane.YES_OPTION) {
			int trangThai = tblNV.getValueAt(row, 7).toString().equalsIgnoreCase("Đang làm") ? 0 : 1;
			if (!daoNV.thoiViecNV(tblNV.getValueAt(row, 2).toString(), trangThai)) {
				JOptionPane.showMessageDialog(null, "Thao tác lỗi");
				return;
			}
			if (trangThai == 0)
				tblNV.setValueAt("Đã nghỉ", row, 7);
			else
				tblNV.setValueAt("Đang làm", row, 7);
			if (trangThai == 0) {
				tblNV.clearSelection();
				btnThoiViec.setText("Làm lại");
				btnThoiViec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/business-man.png")));
				JOptionPane.showMessageDialog(null, "Đã thôi việc nhân viên '" + ten + "'");
			} else {
				tblNV.clearSelection();
				btnThoiViec.setText("Thôi việc");
				btnThoiViec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fired.png")));
				JOptionPane.showMessageDialog(null, "Nhân viên '" + ten + "' đã được làm lại!");
			}

		}

	}

	private void docDataVaoTable() {
		md.getDataVector().removeAllElements();
		if (listNV.size() == 0) {
//			JOptionPane.showMessageDialog(null, "Không có nhân viên nào trong máy!");
			md.addRow(new Object[] { "Không có thông tin", "Không có thông tin", "Không có thông tin",
					"Không có thông tin", "Không có thông tin", "Không có thông tin", "Không có thông tin" });
			return;
		}
		for (int i = (trang - 1) * 20; i < trang * 20; i++) {
			try {
				NhanVien t = listNV.get(i);
				md.addRow(new Object[] { t.getTenNV(), t.isGioiTinh() == true ? "Nam" : "Nữ", t.getSdt(), t.getCmnd(),
						t.getDiaChi().getTinhTP(), t.getDiaChi().getQuanHuyen(), t.getDiaChi().getPhuongXa(),
						t.isTrangThaiLam() == true ? "Đang làm" : "Đã nghỉ" });
			} catch (Exception e) {
				// TODO: handle exception
			}
		}
		txtSoTrang.setText(String.valueOf(trang));
	}

	private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {
		thaoTacKhiSua();
	}

	public void thaoTacKhiSua() {
		pnSua.setVisible(true);
		int row = tblNV.getSelectedRow();
		if (row == -1 || !pnSua.isVisible())
			return;
		loadToPnSua(row);
		btnSua.setEnabled(false);
	}

	private void btnDongActionPerformed(java.awt.event.ActionEvent evt) {
		pnSua.setVisible(false);
		btnSua.setEnabled(true);
		xoaFormSua();
		int r = tblNV.getSelectedRow();
		if (r > -1)
			loadToPnSua(r);
	}

	private void xoaTrang() {
		xoaFormSua();
		txtTim.setText("");
		jcbTimGioiTinh.setSelectedIndex(0);
		jcbTimTrangThai.setSelectedIndex(0);
		docDataVaoTable();
		tblNV.clearSelection();
	}

	private void loadTinh() {
		vecTinhTP = daoDiaChi.getAllTinh();
		if (vecTinhTP.size() == 1) {
			JOptionPane.showMessageDialog(null, "Lỗi khi đọc danh sách tỉnh!");
			return;
		}
		DefaultComboBoxModel<String> md = new DefaultComboBoxModel<String>(vecTinhTP);
		jcbTinh.setModel(md);
	}

	private boolean kiemTra() {
		String ten = txtTen.getText();
		if (ten.equalsIgnoreCase("")) {
			JOptionPane.showMessageDialog(null, "<html><b>Tên nhân viên</b> không được bỏ trống!</html>");
			txtTen.requestFocus();
			return false;
		}
		if (!ten.matches(
				"^([A-Za-zÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀẾỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴÝỶỸàáâãèéêìíòóôõùúăđĩũơưăạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹ]*\\s*)+$")) {
			JOptionPane.showMessageDialog(this, "<html><b>Tên nhân viên</b> không được số và kí tự đặc biệt!</html>");
			txtTen.selectAll();
			return false;

		}
		String cmnd = txtCmnd.getText();
		if (cmnd.equalsIgnoreCase("")) {
			JOptionPane.showMessageDialog(null, "<html><b>Chứng minh nhân dân</b> không được bỏ trống!</html>");
			txtCmnd.requestFocus();
			return false;
		} else if (!cmnd.matches("\\d{9}") && !cmnd.matches("\\d{12}")) {
			JOptionPane.showMessageDialog(null, "<html><b>Chứng minh nhân dân</b> phải có <b>9</b> chữ số</html>");
			txtCmnd.requestFocus();
			txtCmnd.selectAll();
			return false;
		}
		String sdt = txtSDT.getText();
		if (sdt.equalsIgnoreCase("")) {
			JOptionPane.showMessageDialog(null, "<html><b>Số điện thoại</b> không được bỏ trống!</html>");
			txtSDT.requestFocus();
			return false;
		} else if (!sdt.matches(
				"(^(03)[2-9]\\d{7})|(^(07)[06-9]\\d{7})|(^(08)[1-5]\\d{7})|(^(056)\\d{7})|(^(058)\\d{7})|(^(059)\\d{7})|(^(09)[0-46-9]\\d{7})")) {
			JOptionPane.showMessageDialog(this,
					"<html><b>Số điện thoại</b> không có thực!<br>Vui lòng kiểm tra lại</html>");
			txtSDT.selectAll();
			txtSDT.requestFocus();
			return false;
		}
		if (jcbXa.getSelectedIndex() == 0) {
			JOptionPane.showMessageDialog(null, "<html>Mời chọn <b>địa chỉ</b> của nhân viên!</html>");
			return false;
		}
		return true;
	}

	private void updateNV() {
		if (!kiemTra())
			return;
		int row = tblNV.getSelectedRow();
		if (jcbXa.getSelectedIndex() == 0) {
			JOptionPane.showMessageDialog(null, "<html>Mời chọn <b>địa chỉ</b> của khách hàng</html>");
			return;
		}
		int c = JOptionPane.showConfirmDialog(null,
				"Cập nhật lại thông tin của '" + tblNV.getValueAt(row, 0).toString() + "' ?", "Thông báo",
				JOptionPane.YES_NO_OPTION);
		if (c == JOptionPane.NO_OPTION)
			return;
		NhanVien nv = new NhanVien(txtTen.getText(), txtMa.getText(),
				jcbGioiTinh.getSelectedIndex() == 0 ? true : false, txtSDT.getText(), txtCmnd.getText(),
				new DiaChi(jcbTinh.getSelectedItem().toString(), jcbHuyen.getSelectedItem().toString(),
						jcbXa.getSelectedItem().toString()));
		String maKiemTra = daoNV.getMaNVTheoSDT(nv.getSdt());
		String maKiemTra1 = daoNV.getMaNVTheoCMND(nv.getCmnd());
		if (maKiemTra != null && !maKiemTra.equals(nv.getMaNV())) {
			JOptionPane.showMessageDialog(null,
					"<html>Số điện thoại trùng với nhân viên khác!<br>Vui lòng kiểm tra lại!</html>");
			return;
		} else if (maKiemTra1 != null && !maKiemTra1.equals(nv.getMaNV())) {
			JOptionPane.showMessageDialog(null,
					"<html>Số chứng minh trùng với nhân viên khác!<br>Vui lòng kiểm tra lại!</html>");
			return;
		}

		if (daoNV.updateNV(nv)) {
			md.setValueAt(txtTen.getText(), row, 0);
			md.setValueAt(jcbGioiTinh.getSelectedItem().toString(), row, 1);
			md.setValueAt(txtSDT.getText(), row, 2);
			md.setValueAt(txtCmnd.getText(), row, 3);
			md.setValueAt(jcbTinh.getSelectedItem().toString(), row, 4);
			md.setValueAt(jcbHuyen.getSelectedItem().toString(), row, 5);
			md.setValueAt(jcbXa.getSelectedItem().toString(), row, 6);
			tblNV.setRowSelectionInterval(row, row);
			ClassGetImg imgc = new ClassGetImg();
			try {
				imgc.createDropImgThuoc("/nvImg/" + nv.getMaNV(), fileIn);
			} catch (IOException e1) {
				JOptionPane.showMessageDialog(null, "Lưu hình thất bại");
				e1.printStackTrace();
			}
			JOptionPane.showMessageDialog(null, "Cập nhật thông tin thành công!");
			loadToPnSua(row);
		} else {
			JOptionPane.showMessageDialog(null, "Cập nhật thất bại");
		}
	}

	// Variables declaration - do not modify
	private JPanel jPanel2;
	private JLabel lblHinh;
	private javax.swing.JButton btnDong;
	private javax.swing.JButton btnNextForward;
	private javax.swing.JButton btnNextPrevius;
	private javax.swing.JButton btnSkipForward;
	private javax.swing.JButton btnSkipPrevius;
	private javax.swing.JButton btnSua;
	private javax.swing.JButton btnThem;
	private javax.swing.JButton btnThoiViec;
	private javax.swing.JButton btnTim;
	private javax.swing.JButton btnXacNhan;
	private javax.swing.JButton btnXoaTrang;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JPanel jPanel8;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JComboBox<String> jcbGioiTinh;
	private javax.swing.JComboBox<String> jcbHuyen;
	private javax.swing.JComboBox<String> jcbTimGioiTinh;
	private javax.swing.JComboBox<String> jcbTinh;
	private javax.swing.JComboBox<String> jcbXa;
	private javax.swing.JLabel lblDC;
	private javax.swing.JLabel lblHeader;
	private javax.swing.JLabel lblMa1;
	private javax.swing.JLabel lblMa2;
	private javax.swing.JLabel lblSDT;
	private javax.swing.JLabel lblSDT1;
	private javax.swing.JLabel lblTenKH;
	private javax.swing.JLabel lblTimSDT;
	private javax.swing.JLabel lblTimSDT1;
	private javax.swing.JPanel pnBody;
	private javax.swing.JPanel pnHeader;
	private javax.swing.JPanel pnMenu;
	private javax.swing.JPanel pnSua;
	private javax.swing.JPanel pnTable;
	private javax.swing.JTable tblNV;
	private javax.swing.JTextField txtCmnd;
	private javax.swing.JTextField txtMa;
	private javax.swing.JTextField txtSDT;
	private javax.swing.JLabel txtSoTrang;
	private javax.swing.JTextField txtTen;
	private javax.swing.JTextField txtTim;
	private javax.swing.JTextField txtTimTen;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JSeparator jSeparator2;
	private javax.swing.JSeparator jSeparator3;
	private int trang = 1;
	private float flag;
	private int countDS;

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		Object obj = e.getSource();
		if (obj.equals(btnSkipPrevius)) {
			if (trang > 1) {
				trang = 1;
				docDataVaoTable();
			}
		}
		if (obj.equals(btnNextPrevius)) {
			if (trang > 1) {
				trang -= 1;
				docDataVaoTable();
			}
		}
		if (obj.equals(btnNextForward)) {
			flag = (float) countDS / 20;
			if (trang < (int) Math.ceil(flag)) {
				trang += 1;
				docDataVaoTable();
			}
		}
		if (obj.equals(btnSkipForward)) {
			flag = (float) countDS / 20;
			if (trang < (int) Math.ceil(flag)) {
				trang = (int) Math.ceil(flag);
				docDataVaoTable();
			}
		}
	}

	// End of variables declaration
}
